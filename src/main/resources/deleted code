ObjectMapper mapper = new ObjectMapper();
mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
mapper.registerModule(new Jackson2HalModule());

MappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter();
converter.setSupportedMediaTypes(MediaType.parseMediaTypes("application/hal+json"));
converter.setObjectMapper(mapper);

RestTemplate template = new RestTemplate(Collections.<HttpMessageConverter<?>> singletonList(converter));

User user = template.getForObject(host + ":" + port + "/user/1", User.class);
ResponseEntity<Resource<User>> user = template.exchange(
        host + ":" + port + "/user/1",
        HttpMethod.GET,
        null,
        new ParameterizedTypeReference<Resource<User>>(){});

System.out.println(user);

ResponseEntity<PagedResources<Order>> response = template.exchange(
        host + ":" + port + "/user/1",
        HttpMethod.GET,
        null,
        new ParameterizedTypeReference<PagedResources<Order>>() {});

user.setOrders(new ArrayList<>(response.getBody().getContent()));

System.out.println(response);